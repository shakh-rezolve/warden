version: "3.5"
services:
  traefik:
    container_name: traefik
    image: traefik:${TRAEFIK_VERSION:-2.2}
    ports:
      - "${TRAEFIK_LISTEN:-127.0.0.1}:80:80"     # The HTTP port
      - "${TRAEFIK_LISTEN:-127.0.0.1}:443:443"   # The HTTPS port
    volumes:
      - ${WARDEN_HOME_DIR}/etc/traefik/traefik-custom.yml:/etc/traefik/traefik.yml
      - ${WARDEN_HOME_DIR}/etc/traefik/dynamic.yml:/etc/traefik/dynamic.yml
      - ${WARDEN_HOME_DIR}/ssl/certs:/etc/ssl/certs
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.tls=true
      - traefik.http.routers.traefik.tls.certresolver=letsencrypt
      - traefik.http.routers.traefik.rule=Host(`traefik.${WARDEN_SERVICE_DOMAIN:-warden.test}`)
      - traefik.http.routers.traefik.service=api@internal
      # Enable basic auth, set var in ~/.warden/.env
      - "traefik.http.middlewares.traefik-auth.basicauth.users=${WARDEN_BASICAUTH_USER}:${WARDEN_BASICAUTH_PASS}"
      - "traefik.http.routers.traefik.middlewares=traefik-auth"
    restart: ${WARDEN_RESTART_POLICY:-always}

  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer:/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.portainer.tls=true
      - traefik.http.routers.portainer.tls.certresolver=letsencrypt
      - traefik.http.routers.portainer.rule=Host(`portainer.${WARDEN_SERVICE_DOMAIN:-warden.test}`)
      - traefik.http.services.portainer.loadbalancer.server.port=9000
      # Enable basic auth, set var in ~/.warden/.env
#      - "traefik.http.middlewares.portainer-auth.basicauth.users=${WARDEN_BASICAUTH_USER}:${WARDEN_BASICAUTH_PASS}"
#      - "traefik.http.routers.portainer.middlewares=portainer-auth"
    restart: ${WARDEN_RESTART_POLICY:-always}

  dnsmasq:
    container_name: dnsmasq
    image: jpillora/dnsmasq
    ports:
      - "127.0.0.1:53:53/udp"
    environment:
      WARDEN_DNSMASQ_CONF: |-
        #dnsmasq config, for a complete example, see:
        #  http://oss.segetech.com/intra/srv/dnsmasq.conf

        #log all dns queries (enable as-needed for debugging purposes)
        # log-queries

        #dont use hosts nameservers
        no-resolv

        #use cloudflare as default nameservers, prefer 1^4
        server=${WARDEN_DNSMASQ_NS1:-1.0.0.1}
        server=${WARDEN_DNSMASQ_NS2:-1.1.1.1}
        strict-order

        #explicitly define host-ip mappings
        address=/.test/127.0.0.1
        ${WARDEN_DNSMASQ_CONF_ADDITIONAL:-}

    entrypoint: ["/bin/sh", "-c", "
        echo \"$$WARDEN_DNSMASQ_CONF\" > /etc/dnsmasq.conf;
        webproc --config /etc/dnsmasq.conf -- dnsmasq --no-daemon;
      "]
    labels:
      - traefik.enable=true
      - traefik.http.routers.dnsmasq.tls=true
      - traefik.http.routers.dnsmasq.tls.certresolver=letsencrypt
      - traefik.http.routers.dnsmasq.rule=Host(`dnsmasq.${WARDEN_SERVICE_DOMAIN:-warden.test}`)
      - traefik.http.services.dnsmasq.loadbalancer.server.port=8080
      # Enable basic auth, set var in ~/.warden/.env
      - "traefik.http.middlewares.dnsmasq-auth.basicauth.users=${WARDEN_BASICAUTH_USER}:${WARDEN_BASICAUTH_PASS}"
      - "traefik.http.routers.dnsmasq.middlewares=dnsmasq-auth"
    restart: ${WARDEN_RESTART_POLICY:-always}

  mailhog:
    container_name: mailhog
    image: docker.io/wardenenv/mailhog:1.0
    labels:
      - traefik.enable=true
      - traefik.http.routers.mailhog.tls=true
      - traefik.http.routers.mailhog.tls.certresolver=letsencrypt
      - traefik.http.routers.mailhog.rule=Host(`mailhog.${WARDEN_SERVICE_DOMAIN:-warden.test}`)
      - traefik.http.services.mailhog.loadbalancer.server.port=8025
      # Enable basic auth, set var in ~/.warden/.env
      - "traefik.http.middlewares.mailhog-auth.basicauth.users=${WARDEN_BASICAUTH_USER}:${WARDEN_BASICAUTH_PASS}"
      - "traefik.http.routers.mailhog.middlewares=mailhog-auth"
    restart: ${WARDEN_RESTART_POLICY:-always}

  tunnel:
    container_name: tunnel
    image: panubo/sshd:1.1.0
    ports:
      - "127.0.0.1:2222:22"
    volumes:
      - ${WARDEN_HOME_DIR}/tunnel/ssh_key.pub:/etc/authorized_keys/user
      - sshd_keys:/etc/ssh/keys
    environment:
      - |
        MOTD=Welcome to the Warden SSH tunnel container!

        This tunnel container is used only for forwarding TCP
        connections, generally to port 3306 of db containers
        and is not typically used with an interactive shell.

      - SSH_USERS=user:2000:2000
      - TCP_FORWARDING=true
    restart: ${WARDEN_RESTART_POLICY:-always}

volumes:
  portainer:
  sshd_keys:

networks:
  default:
    name: warden
